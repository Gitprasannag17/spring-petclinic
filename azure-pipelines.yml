# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

resources:
  repositories:
    - repository: spc-azure-infra-module
      type: git
      name: Gitprasannag17/spc-azure-infra-module
      ref: refs/heads/main
      
jobs:
  - job: "Build"    
    pool:
      default
    steps:
     - script: |
          echo "Build ID: $(Build.BuildId)"
          echo "Build Number: $(Build.BuildNumber)"
          echo "Source Branch: $(Build.SourceBranch)"    

     - task: Maven@4
       inputs:
         mavenPomFile: 'pom.xml'
         mavenOptions: '-Xmx1024m'
         javaHomeOption: 'JDKVersion'
         jdkVersionOption: '1.17'
         jdkArchitectureOption: 'x64'
         publishJUnitResults: true
         testResultsFiles: '**/surefire-reports/TEST-*.xml'
         goals: 'clean install'

  - job: "Release"
    dependsOn: "Build"             
    pool:
      default


    steps:      
      - checkout: spc-azure-infra-module
      - task: AzureCLI@2
        displayName: 'Terraform Init and Apply'
        inputs:
          azureSubscription: 'arm-service-connection'  # Azure service connection name
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            # Install Terraform (optional if not using UseTerraform task)
            cd ~/spc-azure-infra-module
            terraform --version
            terraform init  # Initialize Terraform working directory
            terraform apply -auto-approve -var="build_id=$(Build.BuildId)" # Apply the configuration without interactive approval
          displayName: 'Run terraform init and apply'
          failOnStandardError: true    