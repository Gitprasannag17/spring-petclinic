# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '838161a4-c2e2-42a5-bd14-60c9058ff626'
  imageRepository: 'spcapp'
  containerRegistry: 'myacr0717.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'myacr0717915c-auth'

stages:
#- stage: Build
#  displayName: Build stage
#  jobs:
#  - job: Build
#    displayName: Build
#    pool:
#      default
#    steps:
#    - task: Docker@2
#      displayName: Build and push an image to container registry
#      inputs:
#        command: buildAndPush
#        repository: $(imageRepository)
#        dockerfile: $(dockerfilePath)
#        containerRegistry: $(dockerRegistryServiceConnection)
#        tags: |
#          $(tag)
#
#    - upload: manifests
#      artifact: manifests

- stage: Deploy
  displayName: Deploy stage
#  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      default
    environment: 'Gitprasannag17springpetclinic.spcns'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: |
                $(Pipeline.Workspace)/manifests/deployment.yml
                $(Pipeline.Workspace)/manifests/service.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)

